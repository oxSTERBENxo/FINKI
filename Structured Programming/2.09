/* Да се имплементира рекурзивна функција која за низа од цели броеви $[a{0}, a{1}, ..., a_{n-1}]$ ќе ја пресмета вредноста на непрекинатата дропка дефинирана како:
v= a0 + (1/a_1+......(1/a_n-1+(1/a_n-1))) // SEE IN PICTURES
Да се напише програма во која се чита цел број N, по што се читаат елементите на низа од N цели броеви (не повеќе од 100). Потоа се повикува рекурзивната функција 
и се печати резултатот во нов ред. */

#include <iostream>
using namespace std;
double rek(int n,int niza[],int i){
    if (i == n - 1) {
            return niza[i];
        } else {
            return niza[i] + 1.0 / rek(n, niza, i + 1);
        }
}
int main(){
    int n,niza[100];
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>niza[i];
    }
    cout<<rek(n,niza,0);
}
