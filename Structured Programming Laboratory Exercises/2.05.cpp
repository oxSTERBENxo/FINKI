/*Од стандарден влез се читаат N броеви. N не е однапред познато, треба да читате броеви додека да се прочита бројот -1. Сместете ги прочитаните броеви во низа. 
Во секој тест пример ќе има помалку од 100 броеви пред бројот -1. Потоа се внесуваат 3 торки од по 4 броеви L, R, V и I. L и R се броеви помеѓу 0 и N-1; во секој тест
пример ќе важи L < R. Бројот I ќе има вредност само 0 или 1. Кога I е 0 ќе треба на броевите со индекси во интервалот [L,R] (вклучително на L и R) да додадете вредност V.
Кога I е 1 ќе треба на броевите со индекси во интервалот (L,R) (не ги вклучува L и R) да додадете вредност V. На крај отпечатете ја низата.*/

#include <iostream>
using namespace std;

int main() {
    int nums[100], count = 0;
    while (true) {
        int num;
        cin >> num;
        if (num == -1) break;
        if (count < 100) {
            nums[count++] = num;
        }
    }
    for (int i = 0; i < 3; i++) {
        int L, R, V, I;
        cin >> L >> R >> V >> I;
        if (I == 0) {
            for (int j = L; j <= R; j++) {
                nums[j] += V;
            }
        } else if (I == 1) {
            for (int j = L + 1; j < R; j++) {
                nums[j] += V;
            }
        }
    }
    for (int i = 0; i < count; i++) {
        cout << nums[i] << " ";
    }
    cout << endl;
    return 0;
}
